name: CircleCI
version: 2.1

variables:
 - name: projectName
   value: CFD2021Projects

orbs:
  codecov: codecov/codecov@1.0.2 # need to allow 3rd party orbs in project settings on circleci
  python: circleci/python@0.2.1
  coverage-reporter: codacy/coverage-reporter@12.1.3

jobs:
  build:
    working_directory: /root/project/CFD2021Projects   # Clone into a directory whose name matches your Package.
    docker:
      - image: julia:1.6.0                # image comes from Docker hub
    steps:
      - restore_cache:
          name: Restore source code cache
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}-
            - source-
      - checkout
      - run:
          name: Git GC
          command: git gc
      - save_cache:
          name: Cache source code
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
            
      - restore_cache:
          name: Restore Julia artifact cache
          keys:
            - julia-artifacts-{{ arch }}-{{ .Branch }}-{{ checksum "Manifest.toml" }}
            - julia-artifacts-{{ arch }}-{{ .Branch }}-
            - julia-artifacts-
      - run:
          name: Build the package
          command: julia -e  'using Pkg; Pkg.activate(pwd()); Pkg.update(); Pkg.build();'
      - save_cache:
          name: Cache Julia artifacts 
          key: julia-artifacts-{{ arch }}-{{ .Branch }}-{{ checksum "Manifest.toml" }}
          paths:
            - ~/.julia/artifacts
            
      - run:
          name: Test the package
          command: julia -e  'using Pkg; Pkg.activate(pwd()); Pkg.test(; coverage=true);'
          
#       - run:
#           name: Process and uplode code-coverage
#           command: julia -e 'using Pkg; Pkg.activate(pwd()); using Coverage; Codecov.submit_local(process_folder())'
#           env:
#             CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - run:
          name: Process code coverage
          command: julia -e 'using Pkg; Pkg.activate(pwd()); using Coverage, Glob; coverage = process_folder(); coverage = append!(coverage, vcat(process_folder.(glob("**/src/"))...)); LCOV.writefile("coverage-lcov.info", coverage)'
      - codecov/upload:
          file: "coverage-lcov.info"
          token: ${CODECOV_TOKEN}
      - coverage-reporter/send_report:
          coverage-reports: 'coverage-lcov.info'
          project-token: ${CODACY_PROJECT_TOKEN}

# version: 2.1

# orbs:
#   python: circleci/python@0.2.1

# jobs:
#   build-and-test:
#     executor: python/default
#     steps:
#       - checkout
#       - python/load-cache
#       - python/install-deps
#       - python/save-cache
#       - run:
#           command: ./manage.py test
#           name: Test

# workflows:
#   main:
#     jobs:
#       - build-and-test
